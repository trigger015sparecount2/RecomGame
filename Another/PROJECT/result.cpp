//=============================================================================
//リザルト管理[Result.cpp]
// Author : 三上航世
//=============================================================================
//*****************************************************************************
// インクルードファイル
//***************************************************************************** 
#if 1
#include "Result.h"
#include "keyboard.h"
#include "gamepad.h"
#include "UI.h"

#include "sound.h"
#endif
//*****************************************************************************
// 静的メンバ変数
//***************************************************************************** 


#if 1
//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CResult::CResult(PRIORITY Priority) :CScene(Priority)
{

}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CResult::~CResult()
{

}
#endif
//*****************************************************************************
// 初期化
//***************************************************************************** 
HRESULT CResult::Init(D3DXVECTOR3 /*pos*/)
{
	m_pKeyboard = CManager::GetKeyboard();
	m_pGamePad = CManager::GetGamepad();
	//bool RankOnly = CManager::GetRankOnly();
	/*
	//UIの配置
	CUI::Create(D3DXVECTOR3(SCREEN_WIDTH / 2, 190.0f, 0), 300.0f, 50.0f, 29);		//UI

	//ランキングの番号UI配置
	CUI::Create(D3DXVECTOR3(520.0f, 270.0f, 0), 60.0f, 50.0f, 3);		//UI
	CUI::Create(D3DXVECTOR3(520.0f, 350.0f, 0), 60.0f, 50.0f, 4);		//UI
	CUI::Create(D3DXVECTOR3(520.0f, 430.0f, 0), 60.0f, 50.0f, 5);		//UI
	CUI::Create(D3DXVECTOR3(520.0f, 510.0f, 0), 60.0f, 50.0f, 6);		//UI
	CUI::Create(D3DXVECTOR3(520.0f, 590.0f, 0), 60.0f, 50.0f, 7);		//UI
	*/
	return S_OK;
}

//*****************************************************************************
// 終了
//***************************************************************************** 
void CResult::Uninit()
{
	CScene::Release();
}

//*****************************************************************************
// kousinn
//***************************************************************************** 
void CResult::Update()
{

}

//描画・作成
#if 1
//*****************************************************************************
//描画
//***************************************************************************** 
void CResult::Draw()
{

}

//*****************************************************************************
//作成
//***************************************************************************** 
CResult *CResult::Create()
{
	CResult *pResult = NULL;
	pResult = new CResult(PRIORITY_ORBIT);		//メモリ確保
								//NULLチェック
	if (pResult != NULL)
	{
		pResult->Init(D3DXVECTOR3(0.0f, 0.0f, 0.0f));
	}

	return pResult;
}
#endif
